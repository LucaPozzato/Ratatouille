openapi: '3.0.2'
info:
  title: Ratatouille API
  description: | 
    This project is the end result of an Hackathon.
    I was in a team of 5 people and we had 36 hours to present a product with the theme of well-being. Our team and I decide to create an app that follows the customer in the journey from buying groceries to having a meal. The app has 4 main features:
  
    * First feature is to be able to compare the supermarkets and choose the cheapest one given a list of products (due to time restrictions we just compared two supermarkets: Carrefour and Penny) 
  
    * Second feature of the app is to have a virtual fridge/pantry where the customer can see all the products that he has in the fridge/pantry, their shelf life and when it was opened
  
    * Third feature is the management of the pantry/fridge
      * The first action is adding the products to the pantry, this can be done in three ways:
        * By manually by adding the product 
        * By uploading a picture of the product
        * By sending an audio where the customer says everything he bough at the supermaket
      * Second action is the deletion of products
      * Third action is setting the date when a certain product was opened (the customer when pressing the burron sets "today" as the day when it was opened)
  
    * Forth feature is to generate a recipe based only on what the customer has in the fridge
  
    I was responsible to the backend of the application and this repo is the end result of my work(special thanks to [Niccol√≤ Puccia](https://github.com/niccolopuccia) who took care of the supermarket compare feature in [comparator.py](https://github.com/LucaPozzato/Ratatouille/blob/main/comparator.py)) 
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000
    description: Default server run with flask

components:
  schemas:
    product:
      type: object
      properties:
        category:
          type: string
          example: biscuit
        date:
          type: string
          example: 2023-12-11
        product:
          type: string
          example: gocciole
        shelf_life:
          type: integer
          example: 365

paths:
  /pantry:
    get:
      summary: Returns a list of products.
      responses:
        '200':
          description: json containing the customer's pantry/fridge
          content:
            application/json:
              schema:
                type: object
                properties:
                  pantry: 
                    type: array
                    items: 
                      $ref: '#/components/schemas/product'
  /pantry/add:
    post:
      summary: Adds the product manually
      requestBody:
        description: The products that needs to be added to the pantry/fridge in json format
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                  example: gocciole
                category:
                  type: string
                  example: biscuit
                shelf_life:
                  type: integer
                  example: 365
      responses:
        '200':
          description: OK

  /pantry/delete:
    post:
      summary: Deletes the product
      requestBody:
        description: The products that needs to be deleted to the pantry/fridge in json format
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                  example: gocciole
      responses:
        '200':
          description: OK

  /pantry/identify:
    post:
      summary: Identifies the product via image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: json containing the identified product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'

  /pantry/identify/json:
    post:
      summary: Identifies the product via image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  example: BASE64_ENCODED_IMAGE
      responses:
        '200':
          description: json containing the identified product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'

  /pantry/identify/confirm:
    get:
      summary: Confirm the identified product.
      responses:
        '200':
          description: Confirmed indentified product

  /pantry/identify/cancel:
    get:
      summary: Cancel the identified product.
      responses:
        '200':
          description: Cancelled indentified product

  /pantry/audio:
    post:
      summary: Identifies the products via audio (has to me mp3 format)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: json containing the identified products
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/product'

  /pantry/audio/json:
    post:
      summary: Identifies the products via audio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  example: BASE64_ENCODED_AUDIO
                format:
                  type: string
                  example: mp3
      responses:
        '200':
          description: json containing the identified products
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/product'

  /pantry/audio/confirm:
    get:
      summary: Confirm the identified products.
      responses:
        '200':
          description: Confirmed indentified products

  /pantry/audio/cancel:
    get:
      summary: Cancel the identified products.
      responses:
        '200':
          description: Cancelled indentified products

  /date:
    post:
      summary: Set opening date of the product
      requestBody:
        description: The products that needs the date to be set to today in json format
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                  example: gocciole
      responses:
        '200':
          description: OK

  /compare:
    post:
      summary: Send list of products and compare the supermarkets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                list:
                  type: string
                  example: gocciole,pasta
      responses:
        '200':
          description: json the singular products and the total cost
          content:
            application/json:
              schema:
                type: object
                properties:
                  Carr_list:
                    type: string
                    example: "-- Product: Pavesi Gocciole Wild Biscotti con Gocce di Cioccolato e Farina Integrale 350g, Price: 2.55 -- Product: Barilla Pasta Penne Rigate n.73 100% Grano Italiano 500g, Price: 1.25"
                  Carrefour:
                    type: string
                    example: 9.04
                  Penny:
                    type: string
                    example: 8.34
                  Penny_list:
                    type: string
                    example: " -- Product: Pavesi Gocciole Chocolate Biscotti con Gocce di Cioccolato 500g, Price: 2.99 -- Product: Percoche pasta gialla or. spa, Price: 0.29"

  /recipe:
    get:
      summary: Returns a recipe.
      responses:
        '200':
          description: Recipe based on the products in fridge/pantry
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipe: 
                    type: string
                    example: "Considering the ingredients given, you can make a simple \"Nutella Filled Croissant with Corn Cream Sauce\". Here's how:\n\nIngredients:\n- Croissant\n- Nutella\n- Pane morbido di grano duro (Optional, can also be replaced by normal bread)\n- Panna da cucina\n- Bonduelle Gold Zlat\u00e1 Kukurica (Canned corn)\n\nInstructions:\n\n1. Warm up your croissants at about 180 degrees in a preheated oven for about 5 minutes. \n\n2. Cut the croissants on one side to create a pocket.\n\n3. Fill the croissant with Nutella (use as much as you prefer).\n\n4. For the corn cream sauce, open up the can of Bonduelle Gold Zlat\u00e1 Kukurica / Canned corn and drain the water.\n\n5. Heat a pan. Add the canned corn and cook for about 3-5 minutes.\n\n6. Lower the heat, add Panna da cucina (heavy cream) to the corn and cook for another 2-3 minutes. Let the corn combination cool.\n\n7. Once cooled, start blending the corn and cream mix till it turns into a smooth paste.\n\n8. Drizzle your corn cream sauce on top of your Nutella filled croissants before serving.\n\nEnjoy your sweet and savoury treat!\n\nAs a note, the \"Pane morbido di grano duro - Esselunga - 400 g\" is a type of bread and the \"San Benedetto th\u00e8 Limone deteinato 0,5\" is a type of lemon tea. These ingredients don't quite fit into the suggested recipe and are hence, optional. On a side note, you can definitely enjoy the lemon tea as a refreshing drink with this sweet and savory treat."
